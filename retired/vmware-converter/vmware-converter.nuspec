<?xml version="1.0" encoding="utf-8"?>
<!-- Read this before creating packages: https://docs.chocolatey.org/en-us/create/create-packages -->
<!-- It is especially important to read the above link to understand additional requirements when publishing packages to the community feed aka dot org (https://community.chocolatey.org/packages). -->
<!-- Test your packages in a test environment: https://github.com/chocolatey-community/chocolatey-test-environment -->
<!--
This is a nuspec. It mostly adheres to https://docs.microsoft.com/en-us/nuget/reference/nuspec. Chocolatey uses a special version of NuGet.Core that allows us to do more than was initially possible. As such there are certain things to be aware of:

* the package xmlns schema url may cause issues with nuget.exe
* Any of the following elements can ONLY be used by choco tools - projectSourceUrl, docsUrl, mailingListUrl, bugTrackerUrl, packageSourceUrl, provides, conflicts, replaces
* nuget.exe can still install packages with those elements but they are ignored. Any authoring tools or commands will error on those elements
-->
<!-- You can embed software files directly into packages, as long as you are not bound by distribution rights. -->
<!-- * If you are an organization making private packages, you probably have no issues here -->
<!-- * If you are releasing to the community feed, you need to consider distribution rights. -->
<!-- Do not remove this test for UTF-8: if “Ω” doesn’t appear as greek uppercase omega letter enclosed in quotation marks, you should use an editor that supports UTF-8, not this one. -->
<package xmlns="http://schemas.microsoft.com/packaging/2015/06/nuspec.xsd">
  <metadata>
    <!-- == PACKAGE SPECIFIC SECTION == -->
    <!-- This section is about this package, although id and version have ties back to the software -->
    <!-- id is lowercase and if you want a good separator for words, use '-', not '.'. Dots are only acceptable as suffixes for certain types of packages, e.g. .install, .portable, .extension, .template -->
    <!-- If the software is cross-platform, attempt to use the same id as the debian/rpm package(s) if possible. -->
    <id>vmware-converter</id>
    <!-- version should MATCH as closely as possible with the underlying software -->
    <!-- Is the version a prerelease of a version? https://docs.microsoft.com/en-us/nuget/concepts/package-versioning#creating-prerelease-packages -->
    <!-- Note that unstable versions like 0.0.1 can be considered a released version, but it's possible that one can release a 0.0.1-beta before you release a 0.0.1 version. If the version number is final, that is considered a released version and not a prerelease. -->
    <version>6.2.0.101</version>
    <!-- owners is a poor name for maintainers of the package. It sticks around by this name for compatibility reasons. It basically means you. -->
    <owners>virtualex</owners>
    <!-- ============================== -->
    <!-- == SOFTWARE SPECIFIC SECTION == -->
    <!-- This section is about the software itself -->
    <title>[RETIRED] VMware vCenter Converter Standalone</title>
    <authors>VMware, Inc.</authors>
    <!-- projectUrl is required for the community feed -->
    <projectUrl>https://my.vmware.com/en/web/vmware/info/slug/infrastructure_operations_management/vmware_vcenter_converter_standalone/6_2_0</projectUrl>
    <iconUrl>https://raw.githubusercontent.com/bcurran3/ChocolateyPackages/master/mylogos/retired.png</iconUrl>
    <!-- copyright is usually years and software vendor, but not required for internal feeds -->
    <copyright>Copyright © 2018 VMware, Inc. All rights reserved.</copyright>
    <tags>retired</tags>
    <releaseNotes>https://docs.vmware.com/en/vCenter-Converter-Standalone/6.2/rn/conv_sa_62_rel_notes.html</releaseNotes>
    <licenseUrl>https://www.vmware.com/download/eula/universal_eula.html</licenseUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <packageSourceUrl>https://github.com/virtualex-itv/chocolatey-packages/tree/master/retired/vmware-converter</packageSourceUrl>
    <docsUrl>https://docs.vmware.com/en/vCenter-Converter-Standalone/index.html</docsUrl>
    <summary>vCenter Converter Standalone converts physical machines and virtual machines to VMware virtual machines and configures VMware virtual machines.</summary>
    <description>## This package has been retired.
      
Per the following [blog](https://blogs.vmware.com/vsphere/2022/02/vcenter-converter-unavailable-for-download.html):

"We have removed vCenter Converter from the list of VMware product downloads. This is a precautionary measure to protect our customers from using legacy technology that does not comply with VMware’s high standards for security and stability. We apologize for any inconvenience this may have caused.

Offering unsupported products based on legacy technology presents potential security and reliability risks to our customers. The last release of vCenter Converter occurred in May 2018, and its support officially ended in December 2019. While we understand some customers may want to use this tool, the risks reached a level where we had no choice but to remove it from the download site.

One of our top goals is to maintain the safety and stability of our customers' workloads. As part of a technology’s evolution, we must consider the technical standards the customers must comply with. When a straightforward update cannot meet compliance requirements, the product needs to undergo a thorough rebuild. This is the case with vCenter Converter, whose functionality will be migrated to a modern platform based on a reliable technology stack.

Work on a renewed version of vCenter Converter is already in progress. Although we cannot commit to any specific timelines for its release, the updated tool will meet our high standards for security and stability, providing enhanced functionality and supporting the latest technologies available in vSphere virtual machines.

vSphere Team"
    </description>
    <!-- =============================== -->
    <!-- Specifying dependencies and version ranges? https://docs.microsoft.com/en-us/nuget/concepts/package-versioning#specifying-version-ranges-in-.nuspec-files -->
    <!-- <dependencies>
      <dependency id="" version="__MINIMUM_VERSION__" />
      <dependency id="" version="[__EXACT_VERSION__]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_INCLUSIVE]" />
      <dependency id="" version="[_MIN_VERSION_INCLUSIVE, MAX_VERSION_EXCLUSIVE)" />
      <dependency id="" />
    </dependencies> -->
    <!--<provides>NOT YET IMPLEMENTED</provides>-->
    <!--<conflicts>NOT YET IMPLEMENTED</conflicts>-->
    <!--<replaces>NOT YET IMPLEMENTED</replaces>-->
  </metadata>
  <!-- this section controls what actually gets packaged into the Chocolatey package -->
  <!-- Uncomment to limit what is packed in -->
  <files>
    <file src="tools\**" target="tools" />
  </files>
</package>
